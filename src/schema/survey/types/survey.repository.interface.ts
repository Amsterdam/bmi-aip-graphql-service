import { Prisma } from '@prisma/client';

import { CreateSurveyInput } from '../dto/create-survey.input';

const surveys = Prisma.validator<Prisma.surveysArgs>()({
	select: {
		id: true,
		surveryedOn: true,
		updatedOn: true,
		status: true,
		description: true,
		dUri: true,
		summaryAndAdvice: true,
		operatorCompanyId: true,
		surveyorCompanyId: true,
		objectId: true,
		created_at: true,
		updated_at: true,
		condition: true,
		storageUsed: true,
		material: true,
		isDOMLight: true,
		pointCloudStorageUsed: true,
		isAssetDescriptionVisible: true,
		isAnnotationsDefaultVisible: true,
		isVideoDownloadVisible: true,
		projectNumber: true,
		inspectionStandardType: true,
		dUriGeo: true,
		dUriMultiBeam: true,
		careCondition: true,
		scanLineCoordinates: true,
		shapesInModel: true,
		isFmecaAvailable: true,
		isCraAvailable: true,
		craInitialHistoryIsBuildBetween4074: true,
		craInitialHistoryIsStaticallyIndeterminate: true,
		craInitialHistoryBuildBetween4074Remarks: true,
		craInitialHistoryStaticallyIndeterminateRemarks: true,
		craInspectionIsBuildBetween4074: true,
		craInspectionIsStaticallyIndeterminate: true,
		craInspectionBuildBetween4074Remarks: true,
		craInspectionStaticallyIndeterminateRemarks: true,
		craInitialHistoryRemarks: true,
		craInspectionRemarks: true,
		craInitialHistoryScore: true,
		craInspectionScore: true,
		craInitialHistoryCondition: true,
		craInspectionCondition: true,
		craInitialHistoryConditionWithoutFactor: true,
		craInspectionConditionWithoutFactor: true,
		preparedAuthor: true,
		preparedDate: true,
		verifiedAuthor: true,
		verifiedDate: true,
		craInitialHistoryConditionScoreWithoutFactor: true,
		craInspectionConditionScoreWithoutFactor: true,
		craInitialHistoryConditionScore: true,
		craInspectionConditionScore: true,
		batchId: true,
		inspectionStandardData: true,
		craInitialHistoryIsBuildBetween4074IsRelevant: true,
		craInitialHistoryIsStaticallyIndeterminateIsRelevant: true,
		craInspectionIsBuildBetween4074IsRelevant: true,
		craInspectionIsStaticallyIndeterminateIsRelevant: true,
		legacyFailureMode: true,
	},
});
export type DbSurvey = Prisma.surveysGetPayload<typeof surveys>;

export interface ISurveyRepository {
	createSurvey(input: CreateSurveyInput): Promise<DbSurvey>;
	findOVSSurveyIdBySpanObject(objectId: string): Promise<string | null>;
}
